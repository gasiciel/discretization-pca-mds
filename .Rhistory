# Tworzenie dwuwykresu (biplot)
biplot(pca_dane, choices = c(1, 2), scale = 0, cex = c(0.6, 0.8),
xlabs = rownames(pca_dane$x), col = c("darkgray", "red"),
main = "Biplot dla PC1 i PC2")
# Zapisujemy oryginalne parametry par()
old_par <- par(no.readonly = TRUE)
# Zwiększamy margines prawy dla legendy
par(mar = c(5, 4, 4, 8) + 0.1)
# Tworzenie dwuwykresu (biplot)
biplot(pca_dane, choices = c(1, 2), scale = 0, cex = c(0.6, 0.8),
xlabs = rownames(pca_dane$x), col = c("darkgray", "red"),
main = "Biplot dla PC1 i PC2")
# Zapisujemy oryginalne parametry par()
old_par <- par(no.readonly = TRUE)
# Zwiększamy margines prawy dla legendy
par(mar = c(5, 4, 4, 8) + 0.1)
# Sprawdzamy, czy etykiety są dostępne i niepuste
if (length(rownames(pca_dane$x)) > 0 && any(nchar(rownames(pca_dane$x)) > 0)) {
point_labels <- rownames(pca_dane$x)
} else if (exists("dane") && "UA_Name" %in% colnames(dane)) {
point_labels <- dane$UA_Name
} else {
# Jeśli brak etykiet, używamy numerów indeksów
point_labels <- paste("Miasto", 1:nrow(pca_dane$x))
}
# Tworzenie dwuwykresu (biplot) - nie używamy parametru xlabs
biplot(pca_dane, choices = c(1, 2), scale = 0, cex = c(0.6, 0.8),
col = c("darkgray", "red"),
main = "Biplot dla PC1 i PC2")
# Dodajemy kolory dla punktów według kontynentów
if (exists("dane") && "UA_Continent" %in% colnames(dane)) {
continent_factor <- as.factor(dane$UA_Continent)
continent_colors <- rainbow(length(levels(continent_factor)))
# Dodajemy punkty w kolorach kontynentów
points(pca_dane$x[, 1], pca_dane$x[, 2],
col = continent_colors[continent_factor], pch = 16, cex = 0.8)
# Dodajemy legendę
legend("topright", inset = c(-0.2, 0), xpd = TRUE,
legend = levels(continent_factor),
col = continent_colors, pch = 16, cex = 0.8,
title = "Kontynent")
}
# Przywracamy oryginalne parametry
par(old_par)
library(plot3D)
install.packages("plot3D")
install.packages("plot3D")
library(plot3D)
library(plot3D)
# Zapisujemy oryginalne parametry par()
old_par <- par(no.readonly = TRUE)
# Zwiększamy margines prawy dla legendy
par(mar = c(5, 4, 4, 8) + 0.1)
# Sprawdzamy, czy etykiety są dostępne i niepuste
if (length(rownames(pca_dane$x)) > 0 && any(nchar(rownames(pca_dane$x)) > 0)) {
point_labels <- rownames(pca_dane$x)
} else if (exists("dane") && "UA_Name" %in% colnames(dane)) {
point_labels <- dane$UA_Name
} else {
# Jeśli brak etykiet, używamy numerów indeksów
point_labels <- paste("Miasto", 1:nrow(pca_dane$x))
}
# Tworzenie dwuwykresu (biplot) - nie używamy parametru xlabs
biplot(pca_dane, choices = c(1, 2), scale = 0, cex = c(0.6, 0.8),
col = c("darkgray", "red"),
main = "Biplot dla PC1 i PC2")
# Dodajemy kolory dla punktów według kontynentów
if (exists("dane") && "UA_Continent" %in% colnames(dane)) {
continent_factor <- as.factor(dane$UA_Continent)
continent_colors <- rainbow(length(levels(continent_factor)))
# Dodajemy punkty w kolorach kontynentów
points(pca_dane$x[, 1], pca_dane$x[, 2],
col = continent_colors[continent_factor], pch = 16, cex = 0.8)
# Dodajemy legendę
legend("topright", inset = c(-0.2, 0), xpd = TRUE,
legend = levels(continent_factor),
col = continent_colors, pch = 16, cex = 0.8,
title = "Kontynent")
}
# Przywracamy oryginalne parametry
par(old_par)
library(scatterplot3d)
# znajdowanie miast odstających (ekstremalnych wartości) dla PC1, PC2 i PC3
extremes_3d <- c(
which.max(pc_data$PC1), which.min(pc_data$PC1),
which.max(pc_data$PC2), which.min(pc_data$PC2),
which.max(pc_data$PC3), which.min(pc_data$PC3)
)
extremes_3d <- unique(extremes_3d)
# przygotowanie kolorów według kontynentów
continent_factor <- as.factor(dane$UA_Continent)
continent_colors <- rainbow(length(levels(continent_factor)))
point_colors <- continent_colors[continent_factor]
# wykres 3D z kolorami kontynentów
scatter3d <- scatterplot3d(pc_data$PC1, pc_data$PC2, pc_data$PC3,
pch=16, color=point_colors,
main="Wykres rozrzutu 3D dla PC1, PC2 i PC3",
xlab="PC1", ylab="PC2", zlab="PC3",
angle=40)
legend("right",
legend=levels(continent_factor),
col=continent_colors,
pch=16, cex=0.7,
title="Kontynent")
xyz <- scatter3d$xyz.convert(pc_data$PC1[extremes_3d],
pc_data$PC2[extremes_3d],
pc_data$PC3[extremes_3d])
points(xyz$x, xyz$y, col="black", pch=1, cex=1.8, lwd=2)
text(xyz$x, xyz$y, labels=dane$UA_Name[extremes_3d], pos=3, col="black", cex=0.6, font=2)
# Zapisujemy oryginalne parametry par()
old_par <- par(no.readonly = TRUE)
# Zwiększamy margines prawy dla legendy
par(mar = c(5, 4, 4, 8) + 0.1)
# Sprawdzamy, czy etykiety są dostępne i niepuste
if (length(rownames(pca_dane$x)) > 0 && any(nchar(rownames(pca_dane$x)) > 0)) {
point_labels <- rownames(pca_dane$x)
} else if (exists("dane") && "UA_Name" %in% colnames(dane)) {
point_labels <- dane$UA_Name
} else {
# Jeśli brak etykiet, używamy numerów indeksów
point_labels <- paste("Miasto", 1:nrow(pca_dane$x))
}
# Tworzenie dwuwykresu (biplot) - nie używamy parametru xlabs
biplot(pca_dane, choices = c(1, 2), scale = 0, cex = c(0.6, 0.8),
col = c("darkgray", "red"),
main = "Biplot dla PC1 i PC2")
# Dodajemy kolory dla punktów według kontynentów
if (exists("dane") && "UA_Continent" %in% colnames(dane)) {
continent_factor <- as.factor(dane$UA_Continent)
continent_colors <- rainbow(length(levels(continent_factor)))
# Dodajemy punkty w kolorach kontynentów
points(pca_dane$x[, 1], pca_dane$x[, 2],
col = continent_colors[continent_factor], pch = 16, cex = 0.8)
# Dodajemy legendę
legend("topright", inset = c(-0.2, 0), xpd = TRUE,
legend = levels(continent_factor),
col = continent_colors, pch = 16, cex = 1,
title = "Kontynent")
}
# Przywracamy oryginalne parametry
par(old_par)
library(plot3D)
library(plot3D)
# Instalacja i załadowanie pakietu plot3D
if (!requireNamespace("plot3D", quietly = TRUE)) {
install.packages("plot3D")
}
library(plot3D)
# Zwiększamy margines prawy dla legendy
par(mar = c(5, 4, 4, 8) + 0.1)
# Sprawdzamy, czy etykiety są dostępne i niepuste
if (length(rownames(pca_dane$x)) > 0 && any(nchar(rownames(pca_dane$x)) > 0)) {
point_labels <- rownames(pca_dane$x)
} else if (exists("dane") && "UA_Name" %in% colnames(dane)) {
point_labels <- dane$UA_Name
} else {
# Jeśli brak etykiet, używamy numerów indeksów
point_labels <- paste("Miasto", 1:nrow(pca_dane$x))
}
# Tworzenie dwuwykresu (biplot) - nie używamy parametru xlabs
biplot(pca_dane, choices = c(1, 2), scale = 0, cex = c(0.6, 0.8),
col = c("darkgray", "red"),
main = "Biplot dla PC1 i PC2")
# Dodajemy kolory dla punktów według kontynentów
if (exists("dane") && "UA_Continent" %in% colnames(dane)) {
continent_factor <- as.factor(dane$UA_Continent)
continent_colors <- rainbow(length(levels(continent_factor)))
# Dodajemy punkty w kolorach kontynentów
points(pca_dane$x[, 1], pca_dane$x[, 2],
col = continent_colors[continent_factor], pch = 16, cex = 0.8)
# Dodajemy legendę
legend("topright", inset = c(-0.2, 0), xpd = TRUE,
legend = levels(continent_factor),
col = continent_colors, pch = 16, cex = 1,
title = "Kontynent")
}
# Przywracamy oryginalne parametry
par(old_par)
# Tworzenie dwuwykresu (biplot) - nie używamy parametru xlabs
biplot(pca_dane, choices = c(1, 2), scale = 0, cex = c(0.6, 0.8),
col = c("darkgray", "red"),
main = "Biplot dla PC1 i PC2")
# Dodajemy kolory dla punktów według kontynentów
if (exists("dane") && "UA_Continent" %in% colnames(dane)) {
continent_factor <- as.factor(dane$UA_Continent)
continent_colors <- rainbow(length(levels(continent_factor)))
# Dodajemy punkty w kolorach kontynentów
points(pca_dane$x[, 1], pca_dane$x[, 2],
col = continent_colors[continent_factor], pch = 16, cex = 0.8)
# Dodajemy legendę
legend("topright", inset = c(-0.2, 0), xpd = TRUE,
legend = levels(continent_factor),
col = continent_colors, pch = 16, cex = 1,
title = "Kontynent")
}
# Przywracamy oryginalne parametry
par(old_par)
if (length(rownames(pca_dane$x)) > 0 && any(nchar(rownames(pca_dane$x)) > 0)) {
point_labels <- rownames(pca_dane$x)
} else if (exists("dane") && "UA_Name" %in% colnames(dane)) {
point_labels <- dane$UA_Name
} else {
# Jeśli brak etykiet, używamy numerów indeksów
point_labels <- paste("Miasto", 1:nrow(pca_dane$x))
}
# Tworzenie dwuwykresu (biplot) - nie używamy parametru xlabs
biplot(pca_dane, choices = c(1, 2), scale = 0, cex = c(0.6, 0.8),
col = c("darkgray", "red"),
main = "Biplot dla PC1 i PC2")
# Dodajemy kolory dla punktów według kontynentów
if (exists("dane") && "UA_Continent" %in% colnames(dane)) {
continent_factor <- as.factor(dane$UA_Continent)
continent_colors <- rainbow(length(levels(continent_factor)))
# Dodajemy punkty w kolorach kontynentów
points(pca_dane$x[, 1], pca_dane$x[, 2],
col = continent_colors[continent_factor], pch = 16, cex = 0.8)
# Dodajemy legendę
legend("topright", inset = c(-0.2, 0), xpd = TRUE,
legend = levels(continent_factor),
col = continent_colors, pch = 16, cex = 1,
title = "Kontynent")
}
# Przywracamy oryginalne parametry
par(old_par)
biplot(pca_dane, choices = c(1, 2), scale = 0, cex = c(0.6, 0.8),
col = c("darkgray", "red"),
main = "Biplot dla PC1 i PC2")
# dodajemy kolory dla punktów według kontynentów
if (exists("dane") && "UA_Continent" %in% colnames(dane)) {
continent_factor <- as.factor(dane$UA_Continent)
continent_colors <- rainbow(length(levels(continent_factor)))
points(pca_dane$x[, 1], pca_dane$x[, 2],
col = continent_colors[continent_factor], pch = 16, cex = 0.8)
legend("topright", inset = c(-0.2, 0), xpd = TRUE,
legend = levels(continent_factor),
col = continent_colors, pch = 16, cex = 1,
title = "Kontynent")
}
install.packages("XQuartz")
# Instalacja i załadowanie pakietu plot3D
if (!requireNamespace("plot3D", quietly = TRUE)) {
install.packages("plot3D")
}
library(plot3D)
library(scatterplot3d)
# Zapisujemy oryginalne parametry par()
old_par <- par(no.readonly = TRUE)
# Zwiększamy margines prawy dla legendy
par(mar = c(5, 4, 4, 8) + 0.1)
# Znajdowanie miast odstających (ekstremalnych wartości) dla PC1, PC2 i PC3
extremes_3d <- c(
which.max(pc_data$PC1), which.min(pc_data$PC1),
which.max(pc_data$PC2), which.min(pc_data$PC2),
which.max(pc_data$PC3), which.min(pc_data$PC3)
)
extremes_3d <- unique(extremes_3d)  # usuń duplikaty
# Przygotowanie kolorów według kontynentów
continent_factor <- as.factor(dane$UA_Continent)
kolory <- rainbow(length(levels(continent_factor)))
point_colors <- kolory[continent_factor]
# Wykres 3D z kolorami kontynentów
scatter3d <- scatterplot3d(pc_data$PC1, pc_data$PC2, pc_data$PC3,
pch=16, color=point_colors,
main="Wykres rozrzutu 3D dla PC1, PC2 i PC3",
xlab="PC1", ylab="PC2", zlab="PC3",
angle=40, box=FALSE)
# Dodajemy legendę
legend("topright", inset = c(-0.25, 0), xpd = TRUE,
legend=levels(continent_factor),
col=kolory, pch=16, cex=0.8,
title="Kontynent")
# Konwersja współrzędnych dla etykiet i okręgów
xyz <- scatter3d$xyz.convert(pc_data$PC1[extremes_3d],
pc_data$PC2[extremes_3d],
pc_data$PC3[extremes_3d])
# Obtaczamy punkty odstające czarnym okręgiem
points(xyz$x, xyz$y, col="black", pch=1, cex=1.8, lwd=2)
# Dodanie etykiet dla punktów ekstremalnych
text(xyz$x, xyz$y, labels=dane$UA_Name[extremes_3d], pos=3, col="black", cex=0.8, font=2)
# Przywracamy oryginalne parametry
par(old_par)
library(scatterplot3d)
# znajdowanie miast odstających (ekstremalnych wartości) dla PC1, PC2 i PC3
extremes_3d <- c(
which.max(pc_data$PC1), which.min(pc_data$PC1),
which.max(pc_data$PC2), which.min(pc_data$PC2),
which.max(pc_data$PC3), which.min(pc_data$PC3)
)
extremes_3d <- unique(extremes_3d)
# przygotowanie kolorów według kontynentów
continent_factor <- as.factor(dane$UA_Continent)
continent_colors <- rainbow(length(levels(continent_factor)))
point_colors <- continent_colors[continent_factor]
# wykres 3D z kolorami kontynentów
scatter3d <- scatterplot3d(pc_data$PC1, pc_data$PC2, pc_data$PC3,
pch=16, color=point_colors,
main="Wykres rozrzutu 3D dla PC1, PC2 i PC3",
xlab="PC1", ylab="PC2", zlab="PC3",
angle=40)
legend("right",
legend=levels(continent_factor),
col=continent_colors,
pch=16, cex=0.7,
title="Kontynent")
xyz <- scatter3d$xyz.convert(pc_data$PC1[extremes_3d],
pc_data$PC2[extremes_3d],
pc_data$PC3[extremes_3d])
points(xyz$x, xyz$y, col="black", pch=1, cex=1.8, lwd=2)
text(xyz$x, xyz$y, labels=dane$UA_Name[extremes_3d], pos=3, col="black", cex=0.6, font=2)
install.packages("corrplot")
# obliczamy macierz korelacji
macierz_korelacji <- cor(zmienne.ilosciowe)
library(corrplot)
corrplot(macierz_korelacji, method = "circle", type = "upper", order = "hclust",
tl.col = "black", tl.cex = 0.7, tl.srt = 45,
col = colorRampPalette(c("blue", "white", "red"))(200),
addCoef.col = "black", number.cex = 0.5,
title = "Macierz korelacji zmiennych")
# obliczamy macierz korelacji
macierz_korelacji <- cor(zmienne.ilosciowe)
library(corrplot)
corrplot(macierz_korelacji, method = "circle", order = "hclust",
tl.col = "black", tl.cex = 0.7, tl.srt = 45,
col = colorRampPalette(c("blue", "white", "red"))(200),
addCoef.col = "black", number.cex = 0.5,
title = "Macierz korelacji zmiennych")
par(mar = c(5, 4, 4, 8) + 0.2)
# generujemy biplot bez etykiet dla punktów (ustawiając cex na wektor, gdzie pierwszy element to 0)
biplot(pca_dane, choices = c(1, 2), scale = 0, cex = c(0, 0.8),
col = c("darkgray", "red"),
main = "Biplot dla PC1 i PC2")
# Dodajemy kolory dla punktów według kontynentów
if (exists("dane") && "UA_Continent" %in% colnames(dane)) {
continent_factor <- as.factor(dane$UA_Continent)
continent_colors <- rainbow(length(levels(continent_factor)))
# Dodajemy punkty w kolorach kontynentów (bez etykiet)
points(pca_dane$x[, 1], pca_dane$x[, 2],
col = continent_colors[continent_factor], pch = 16, cex = 0.8)
# Dodajemy legendę
legend("topright", inset = c(-0.2, 0), xpd = TRUE,
legend = levels(continent_factor),
col = continent_colors, pch = 16, cex = 0.8,
title = "Kontynent")
}
# Przywracamy oryginalne parametry par()
par(old_par)
par(mar = c(5, 4, 4, 8) + 0.2)
# generujemy biplot bez etykiet dla punktów (ustawiając cex na wektor, gdzie pierwszy element to 0)
biplot(pca_dane, choices = c(1, 2), scale = 0, cex = c(0),
col = c("darkgray", "red"),
main = "Biplot dla PC1 i PC2")
# Dodajemy kolory dla punktów według kontynentów
if (exists("dane") && "UA_Continent" %in% colnames(dane)) {
continent_factor <- as.factor(dane$UA_Continent)
continent_colors <- rainbow(length(levels(continent_factor)))
# Dodajemy punkty w kolorach kontynentów (bez etykiet)
points(pca_dane$x[, 1], pca_dane$x[, 2],
col = continent_colors[continent_factor], pch = 16, cex = 0.8)
# Dodajemy legendę
legend("topright", inset = c(-0.2, 0), xpd = TRUE,
legend = levels(continent_factor),
col = continent_colors, pch = 16, cex = 0.8,
title = "Kontynent")
}
# Przywracamy oryginalne parametry par()
par(old_par)
# Zapisujemy oryginalne parametry par()
old_par <- par(no.readonly = TRUE)
# Ustawiamy marginesy
par(mar = c(5, 4, 4, 8) + 0.2)
# Przygotowujemy puste etykiety dla punktów - to kluczowy krok
empty_labels <- rep("", nrow(pca_dane$x))
# Generujemy biplot z pustymi etykietami dla punktów
biplot(pca_dane, choices = c(1, 2), scale = 0, cex = c(0.6, 0.8),
col = c("darkgray", "red"),
main = "Biplot dla PC1 i PC2",
xlabs = empty_labels)  # użycie pustych etykiet zamiast numerów
# Dodajemy kolory dla punktów według kontynentów
if (exists("dane") && "UA_Continent" %in% colnames(dane)) {
continent_factor <- as.factor(dane$UA_Continent)
continent_colors <- rainbow(length(levels(continent_factor)))
# Dodajemy punkty w kolorach kontynentów
points(pca_dane$x[, 1], pca_dane$x[, 2],
col = continent_colors[continent_factor], pch = 16, cex = 0.8)
# Dodajemy legendę
legend("topright", inset = c(-0.2, 0), xpd = TRUE,
legend = levels(continent_factor),
col = continent_colors, pch = 16, cex = 0.8,
title = "Kontynent")
}
# Przywracamy oryginalne parametry par()
par(old_par)
# Zapisujemy oryginalne parametry par()
old_par <- par(no.readonly = TRUE)
# Ustawiamy marginesy
par(mar = c(5, 4, 4, 8) + 0.2)
# Przygotowujemy puste etykiety dla punktów - to kluczowy krok
empty_labels <- rep("", nrow(pca_dane$x))
# Generujemy biplot z pustymi etykietami dla punktów
biplot(pca_dane, choices = c(1, 2), scale = 0, cex = c(0.6, 0.8),
col = c("darkgray", "red"),
main = "Biplot dla PC1 i PC2",
xlabs = empty_labels)  # użycie pustych etykiet zamiast numerów
# Dodajemy kolory dla punktów według kontynentów
if (exists("dane") && "UA_Continent" %in% colnames(dane)) {
continent_factor <- as.factor(dane$UA_Continent)
continent_colors <- rainbow(length(levels(continent_factor)))
# Dodajemy punkty w kolorach kontynentów
points(pca_dane$x[, 1], pca_dane$x[, 2],
col = continent_colors[continent_factor], pch = 16, cex = 0.8)
# Dodajemy legendę
legend("topright", inset = c(-0.2, 0), xpd = TRUE,
legend = levels(continent_factor),
col = continent_colors, pch = 16, cex = 0.8,
title = "Kontynent")
}
# Przywracamy oryginalne parametry par()
par(old_par)
par(mar = c(5, 4, 4, 8) + 0.2)
biplot(pca_dane, choices = c(1, 2), scale = 0, cex = c(0.6, 0.8),
col = c("darkgray", "red"),
main = "Biplot dla PC1 i PC2")
# dodajemy kolory dla punktów według kontynentów
if (exists("dane") && "UA_Continent" %in% colnames(dane)) {
continent_factor <- as.factor(dane$UA_Continent)
continent_colors <- rainbow(length(levels(continent_factor)))
points(pca_dane$x[, 1], pca_dane$x[, 2],
col = continent_colors[continent_factor], pch = 16, cex = 0.8)
legend("topright", inset = c(-0.2, 0), xpd = TRUE,
legend = levels(continent_factor),
col = continent_colors, pch = 16, cex = 0.8,
title = "Kontynent")
}
# Zapisujemy oryginalne parametry par()
old_par <- par(no.readonly = TRUE)
par(mar = c(5, 4, 4, 8) + 0.2)
# 1. Najpierw generujemy standardowy biplot bez etykiet
biplot(pca_dane, choices = c(1, 2), scale = 0, cex = c(0.6, 0.8),
xlabs = rep("", nrow(pca_dane$x)),  # Puste etykiety dla punktów
col = c("darkgray", "red"),
main = "Biplot dla PC1 i PC2")
# 2. Teraz nadpisujemy punkty ciemnymi, wyraźnymi punktami
# Najpierw rysujemy większe czarne punkty jako tło
points(pca_dane$x[, 1], pca_dane$x[, 2],
pch = 16, col = "black", cex = 1.0)
# 3. Teraz rysujemy kolorowe punkty według kontynentów
if (exists("dane") && "UA_Continent" %in% colnames(dane)) {
continent_factor <- as.factor(dane$UA_Continent)
continent_colors <- rainbow(length(levels(continent_factor)))
points(pca_dane$x[, 1], pca_dane$x[, 2],
col = continent_colors[continent_factor],
pch = 16, cex = 0.8)
# Dodajemy legendę
legend("topright", inset = c(-0.2, 0), xpd = TRUE,
legend = levels(continent_factor),
col = continent_colors, pch = 16, cex = 0.8,
title = "Kontynent")
}
# Przywracamy oryginalne parametry par()
par(old_par)
par(mar = c(5, 4, 4, 8) + 0.2)
biplot(pca_dane, choices = c(1, 2), scale = 0, cex = c(0.6, 0.8),
col = c("darkgray", "red"),
main = "Biplot dla PC1 i PC2")
# dodajemy kolory dla punktów według kontynentów
if (exists("dane") && "UA_Continent" %in% colnames(dane)) {
continent_factor <- as.factor(dane$UA_Continent)
continent_colors <- rainbow(length(levels(continent_factor)))
points(pca_dane$x[, 1], pca_dane$x[, 2],
col = continent_colors[continent_factor], pch = 16, cex = 0.8)
legend("topright", inset = c(-0.2, 0), xpd = TRUE,
legend = levels(continent_factor),
col = continent_colors, pch = 16, cex = 0.8,
title = "Kontynent")
}
# obliczamy macierz korelacji
macierz_korelacji <- cor(zmienne.ilosciowe)
library(corrplot)
corrplot(macierz_korelacji, method = "circle", order = "hclust",
tl.col = "black", tl.cex = 0.7, tl.srt = 45,
col = colorRampPalette(c("blue", "white", "red"))(200),
addCoef.col = "black", number.cex = 0.5,
title = "Macierz korelacji zmiennych")
knitr::opts_chunk$set(
echo = FALSE,
fig.align = "center",
fig.pos = "H",
message = FALSE,
warning = FALSE,
out.extra = ""
)
knitr::opts_chunk$set(warning = FALSE, message = FALSE, echo = FALSE)
knitr::opts_chunk$set(fig.pos = "H", out.extra = "", fig.align = "center")
library(showtext)
library(xtable)
showtext_auto()
data("glass", package = "mlbench")
cat("Wymiary zbioru danych:", dim(Glass))
data("glass", package = "mlbench")
cat("Wymiary zbioru danych:", dim(glass))
install.packages("DataExplorer")
library(DataExplorer)
plot_str(Glass)
library(DataExplorer)
plot_str(Glass)
colSums(is.na(Glass))
data("Glass", package = "mlbench")
cat("Wymiary zbioru danych:", dim(Glass))
colSums(is.na(Glass))
str(Glass)
library(DataExplorer)
plot_str(Glass)
